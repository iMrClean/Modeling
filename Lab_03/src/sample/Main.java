package sample;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;
/**
 * Лабораторная работа № 3
 * Написать программу, которая запрашивает у пользователя матрицу интенсивностей, которые характеризуют интенсивность переходов между состояниями системы.
 * На основе этой матрицы надо построить уравнения Колмогорова и найти время, за которое та или иная часть системы будет приходить в стабильное состояние (т.е. при котором вероятность переходов перестаёт меняться).
 * Размер матрицы должен быть настраиваемым, от 2х2 до ?x?.
 * Время стабилизации состояния равно произведению вероятности для этого состояния, умноженному на сумму всех положительных входящих в это состояние интенсивностей и отрицательных исходящих.
 * Важное (и логичное) следствие - если все интенсивности равны единице то время стабилизации
 * для всех состояний будет равно нулю - это и логично, и вычисляется т.е. сумма входящих и сумма исходящих интенсивностей для каждого состояния будет одинаковой,
 * сложение положительных и отрицательных одинаковых сумм даст ноль, и какую вероятность на этот ноль ни умножай - будет ноль.
 */
public class Main extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception{
        Parent root = FXMLLoader.load(getClass().getResource("sample.fxml"));
        primaryStage.setTitle("Hello World");
        primaryStage.setScene(new Scene(root, 300, 275));
        primaryStage.show();
    }


    public static void main(String[] args) {
        launch(args);
    }
}
